# image will be published to ghcr.io/<user>/<name>
name: myos
# description will be included in the image's metadata
description: This is my personal OS image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/bluefin-dx
image-version: 39 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - usr: /usr # copies config/files/usr into your image's /usr.
                  # put configuration files you want in /etc/ on a booted system 
                  # in /usr/etc/ in the image. read more in files module reference.

  - type: rpm-ostree
    repos:
      - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-40/atim-starship-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/solopasha/hyprland/repo/fedora-40/solopasha-hyprland-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/g/copr/PyPI/repo/fedora-40/group_copr-PyPI-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/ublue-os/staging/repo/fedora-40/ublue-os-staging-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite-multilib/repo/fedora-40/kylegospo-bazzite-multilib-fedora-40.repo?arch=x86_64
      - https://copr.fedorainfracloud.org/coprs/kylegospo/bazzite/repo/fedora-40/kylegospo-bazzite-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/ryanabx/cosmic-epoch/repo/fedora-40/ryanabx-cosmic-epoch-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/peterwu/rendezvous/repo/fedora-40/peterwu-rendezvous-fedora-40.repo
    install:
      - micro
      - starship
      - neovim
      - helix
      - kakoune
      - ncdu
      - zsh
      - fish
      - xonsh
      - ranger
      - kitty
      - alacritty
      - ptyxis
      - emacs
      - rclone
      - restic
      - timeshift
      - gnome-shell-extension-pop-shell
      - kdeconnectd
      - fastfetch
      - antimicrox
      - lsd
      - eza
      - cliphist
      - cargo
      - openssl-devel
      - zathura
      - power-profiles-daemon
      - libgda 
      - libgda-sqlite
      - zlib-devel
      - libjpeg-turbo-devel
      - python3-devel
      - libpng-devel
      - libtiff-devel
      - freetype-devel
      - lcms2-devel
      - libwebp-devel
      - wireplumber-devel
      - libdbusmenu-gtk3-devel
      - playerctl-devel
      - gtk-layer-shell-devel
      - upower-devel
      - upower
      - bibata-cursor-themes
      #- steam

      ### Basic utilities
      - axel
      - coreutils
      - cliphist
      - cmake
      - curl
      - fuzzel
      - rsync
      - ripgrep
      - gojq
      - meson
      - typescript
      - gjs
      - libtool
      - libtool-ltdl
      - libtool-ltdl-devel

      ### Make dependencies for MicroTeX
      - tinyxml2
      - gtkmm2.4-devel
      - gtkmm3.0-devel
      - gtkmm4.0-devel
      - gtksourceviewmm
      - cairomm


      # hyprland
      - hyprland-git
      - hyprpaper # wallpaper util
      - hyprpicker # color picker
      - hyprshot # screenshot util
      - pyprland
      - hyprcursor
      - xdg-desktop-portal-hyprland # desktop portal
      - jq
      - waypipe

      # sway
      - sway
      #- sway-contrib
      - waybar-git
        sway-config-fedora
      - grim
      - grimshot
      - swaylock-effects

      # audio
      - pavucontrol
      - pulseaudio-utils
      - libnotify
      - pipewire
      - wireplumber
      - pamixer

      # bluetooth
      - blueman

      # modern cli tools https://github.com/ibraheemdev/modern-unix
      - duf
      - eza
      - httpie
      - procs
      - tldr

      # network
      - network-manager-applet
      - NetworkManager-l2tp-gnome
      - NetworkManager-libreswan-gnome
      - NetworkManager-openconnect-gnome
      - NetworkManager-openvpn-gnome
      - NetworkManager-pptp-gnome
      - NetworkManager-sstp-gnome
      - NetworkManager-vpnc-gnome

      # other
      - bolt
      - fprintd-pam
      - gnome-keyring-pam
      - lxqt-policykit
      - nautilus
      - pinentry-gnome3
      - plymouth-system-theme
      - sddm-wayland-generic # display manager
      - system-config-printer

      # ags
      - aylurs-gtk-shell-git
      - fzf
      - swappy
      - swww
      - fd-find
        wf-recorder

      # launcher
      - rofi-wayland

      # environment
      - xorg-x11-server-Xwayland
      - polkit
      - lxpolkit
      - xdg-user-dirs
      - dbus-tools
      - dbus-daemon
      - wl-clipboard
      - gnome-keyring
      - pavucontrol
      - playerctl
      - qt5-qtwayland
      - qt6-qtwayland
      - vulkan-validation-layers
      - vulkan-tools
      - google-noto-emoji-fonts
      - gnome-disk-utility
      - xdg-desktop-portal-gtk

      # networking
      - network-manager-applet
      - NetworkManager-openvpn
      - NetworkManager-openconnect
      - bluez
      - bluez-tools
      - blueman

      # file manager
      - thunar
      - thunar-archive-plugin 
      - thunar-volman
      - xarchiver
      - imv
      - p7zip
      - unrar-free

      # screenshot
      - slurp
      - grim

      # display
      - wlr-randr
      - wlsunset
      - brightnessctl
      - swayidle
      - kanshi

      # terminal
      - foot

      # notifications
      - dunst

      # theme and GUI
      - adwaita-qt5
      - fontawesome-fonts-all
      - gnome-themes-extra
      - gnome-icon-theme
      - paper-icon-theme
      - breeze-icon-theme 
      - papirus-icon-theme

      # River
      - river
      - xdg-desktop-portal-wlr
      - xdg-desktop-portal-gtk

      # Docker
      #- docker-buildx-plugin
      #- docker-ce
      #- docker-ce-cli
      #- docker-ce-rootless-extras
      #- docker-compose-plugin

      # Cosmic
      - cosmic-desktop
      - tuned

    remove:
      # example: removing firefox (in favor of the flatpak)
      # "firefox" is the main package, "firefox-langpacks" is a dependency
      #- firefox
      #- firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  - type: default-flatpaks
    notify: true # Send notification after install/uninstall is finished (true/false)
    system:
      # If no repo information is specified, Flathub will be used by default
      repo-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      repo-name: flathub
      repo-title: "Flathub (system-wide)" # Optional; this sets the remote's user-facing name in graphical frontends like GNOME Software
      install:
        - org.mozilla.firefox
        - org.gnome.Loupe
        - one.ablaze.floorp//lightning # This is an example of flatpak which has multiple branches in selection (flatpak//branch).
      # Flatpak runtimes are not supported (like org.winehq.Wine//stable-23.08),
      # only normal flatpak applications are (like Floorp Lightning web browser in this example).
      # Installing different branches of the same Flatpak is not supported.
      remove:
      # - org.gnome.eog
  
    # Assuming that the above example is configured first in a recipe,
    # a subsequent usage might look like this:
  - type: default-flatpaks
    system:
      # If the repo-* fields are omitted on the subsequent usage,
      # the module will use the previously configured repo.
      # Otherwise, it will overwrite the repo configuration.
      install:
        - org.kde.kdenlive # this Flatpak is appended to the insta llist
        - com.valvesoftware.Steam
        #- com.steamgriddb.steam-rom-manager
        - org.gnome.World.PikaBackup
        - com.jetbrains.PyCharm-Community
        - com.visualstudio.code
        - com.mattjakeman.ExtensionManager
        - org.wezfurlong.wezterm
        - md.obsidian.Obsidian
        - net.ankiweb.Anki
        - page.kramo.Cartridges
        - com.usebottles.bottles
        - com.vysp3r.ProtonPlus
        - net.davidotek.pupgui2
        - org.ryujinx.Ryujinx
        - org.mozilla.firefox
        - net.codelogistics.webapps
        - com.quexten.Goldwarden
        - com.bitwarden.desktop
        - org.telegram.desktop
        - com.slack.Slack
        - org.gnome.Boxes
        - io.atom.Atom
        - org.gnome.baobab
        - net.nokyan.Resources
        - com.github.tchx84.Flatseal
        - org.kde.okular
        - com.discordapp.Discord
        - io.gitlab.liferooter.TextPieces
        - io.github.flattool.Warehouse
        - org.DolphinEmu.dolphin-emu
        - com.jeffser.Alpaca
        - im.riot.Riot
        - com.stremio.Stremio
        - com.github.GradienceTeam.Gradience
        - org.gnome.Fractal
        - com.ticktick.TickTick
        - org.libreoffice.LibreOffice
        - com.gopeed.Gopeed
        - org.qbittorrent.qBittorrent
        - org.chromium.Chromium

    user:
      # repo-name will overwrite the previously-configured repo-name for the user remote
      repo-name: flathub-user
      repo-title: "Flathub (User)"

  - type: script
    scripts:
      #- nix.sh
      - getbeeper.sh
      - getsimplex.sh
      - ags-deps.sh
      - git.sh
      - enablepop.sh
      - post-install.sh
      - block-ads.sh

  - type: fonts
    fonts:
      nerd-fonts:
        - FiraCode # don't add spaces or "Nerd Font" suffix.
        - Hack
        - SourceCodePro
        - Terminus
        - JetBrainsMono
        - NerdFontsSymbolsOnly
        - Meslo
        - Iosevka
        - IosevkaTerm
        - Inconsolata
        - Noto
      google-fonts:
        - Roboto
        - Open Sans

  - type: bling
    install:
      - ublue-update # https://github.com/ublue-os/ublue-update
      - 1password # install 1Password (stable) and `op` CLI tool
      - dconf-update-service # a service unit that updates the dconf db on boot
        # gnome-vrr # enables gnome-vrr for your image
        # - laptop # installs TLP and configures your system for laptop usage
      - flatpaksync # allows synchronization of user-installed flatpaks, see separate documentation section

  - type: chezmoi
    # Installs chezmoi to /usr/bin/chezmoi from latest Github release
    install_chezmoi: true # Optional - Default: true  - Expects type: boolean
    # () Git repository to initialize
    repository: "https://github.com/AsirShahid/dotfiles" # Required - Default: n/a  - Expects type: string
    # Enable the modules services globally for all users
    enable_all_users: true # Optional - Default: true - Expects type: boolean
    # Dotfiles will be updated with this interval
    run_every: '1d' # Optional - Default: '1d' - Expects type: string
    # Dotfile updates will wait this long after a boot before running
    wait_after_boot: '5m' # Optional - Default: '5m' - Expects type: string
    # Disable the service that initializes `repository` on users that are logged in or has linger enabled
    disable_init: false # Optional - Default: false - Expects type: boolean
    # Disable the timer that updates chezmoi with the interval set above
    disable_update: false # Optional - Default: false - Expects type: boolean
    # Policy for handling file that has changed on disk compared to your repo. Accepts "skip" or "replace"
    changed-file-policy: "skip" # Optional - Default: "skip" - Expects type: string

#   - type: akmods
#     base: main # if not specified, classic "main" base is used by default
#     install:
#       - framework-laptop
#       - ryzen-smu
#       - zenergy
      #- gcadapter_oc

  - type: gnome-extensions
    install:
      - Night Theme Switcher
      - Blur my Shell # Notice how extension is named "Blur my Shell" & not "Blur My Shell"?
                          # Name is case-sensitive, so check if extension name is typed correctly
      - Bluetooth Battery Meter
      - Pano - Clipboard Manager
      - Caffeine
      - OpenWeather Refined
      #- "Weather O'Clock"
      #- Pop Shell
    #uninstall:
      #- GSConnect # Uninstall step here should be used only for the extensions
                      # which are not installed through OS package manager in the base image,
                      # like extensions installed from gnome-extensions module
  - type: brew
    # Auto-update Brew binary
    auto-update: true # Optional - Default: true - Expects type: boolean
    # Interval between Brew updates
    update-interval: '6h' # Optional - Default: '6h' - Expects type: string
    # Time delay after boot before first Brew update
    update-wait-after-boot: '10min' # Optional - Default: '10min' - Expects type: string
    # Auto-upgrade Brew packages
    auto-upgrade: true # Optional - Default: true - Expects type: boolean
    # Interval between Brew package upgrades
    upgrade-interval: '8h' # Optional - Default: '8h' - Expects type: string
    # Time delay after boot before first Brew upgrade
    upgrade-wait-after-boot: '30min' # Optional - Default: '30min' - Expects type: string
    # Apply nofile limits for Brew installations
    nofile-limits: false # Optional - Default: false - Expects type: boolean
    # Control Brew analytics
    brew-analytics: true # Optional - Default: true - Expects type: boolean

  - type: systemd
    system:
      enabled:
        #- nix-daemon.service
        - power-profiles-daemon.service
        #- coolercontrold.service
        #- example.service # Enabled (runs on system boot)
      disabled:
        #- example.target # Disabled (does not run on system boot, unless other unit strictly requires it)
      masked:
        #- example.service # Masked (does not run on system boot, under any circumstances)
      unmasked:
        #- example.service # Unmasked (runs on system boot, even if previously masked)
    user:
      enabled:
        #- example.timer # Enabled (runs for the user)
      disabled:
        #- example.service # Disabled (does not run for the user, unless other unit strictly requires it)
      masked:
        #- example.service # Masked (does not run for the user, under any circumstances)
      unmasked:
        #- example.service # Unmasked (runs for the user, even if previously masked)

  - type: signing # this sets up the proper policy & signing files for signed images to work fully


