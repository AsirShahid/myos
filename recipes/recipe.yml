# image will be published to ghcr.io/<user>/<name>
name: myos
# description will be included in the image's metadata
description: This is my personal OS image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/bluefin
image-version: 40 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - usr: /usr # copies config/files/usr into your image's /usr.
                  # put configuration files you want in /etc/ on a booted system 
                  # in /usr/etc/ in the image. read more in files module reference.

  - type: rpm-ostree
    repos:
      - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-40/atim-starship-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/solopasha/hyprland/repo/fedora-40/solopasha-hyprland-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/g/copr/PyPI/repo/fedora-40/group_copr-PyPI-fedora-40.repo
      - https://copr.fedorainfracloud.org/coprs/ublue-os/staging/repo/fedora-40/ublue-os-staging-fedora-40.repo
    install:
      - micro
      - starship
      - neovim
      - ncdu
      - zsh
      - fish
      - xonsh
      - ranger
      - kitty
      - emacs
      - rclone
      - restic
      - gnome-shell-extension-pop-shell
      - kdeconnectd
      - fastfetch
      - ptyxis

      # hyprland
      - hyprland
      - hyprpaper # wallpaper util
      - hyprpicker # color picker
      - hyprshot # screenshot util
      - xdg-desktop-portal-hyprland # desktop portal

      # audio
      - pavucontrol
      - pipewire
      - playerctl
      - wireplumber

      # bluetooth
      - blueman

      # modern cli tools https://github.com/ibraheemdev/modern-unix
      - duf
      - eza
      - fd-find
      - httpie
      - procs
      - tldr

      # network
      - network-manager-applet
      - NetworkManager-l2tp-gnome
      - NetworkManager-libreswan-gnome
      - NetworkManager-openconnect-gnome
      - NetworkManager-openvpn-gnome
      - NetworkManager-pptp-gnome
      - NetworkManager-sstp-gnome
      - NetworkManager-vpnc-gnome

      # qt
      - qt5-qtwayland
      - qt6-qtwayland

      # other
      - bolt
      - brightnessctl
      - dunst # notification daemon
      - fprintd-pam
      - gnome-keyring-pam
      - lxqt-policykit
      - nautilus
      - pinentry-gnome3
      - plymouth-system-theme
      - rofi-wayland
      - sddm-wayland-generic # display manager
      - system-config-printer
      - waybar
      - wl-clipboard

      # ags
      - aylurs-gtk-shell
      - fzf
      - swappy
      - swww
      - fd-find

    remove:
      # example: removing firefox (in favor of the flatpak)
      # "firefox" is the main package, "firefox-langpacks" is a dependency
      # - firefox
      # - firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  - type: default-flatpaks
    notify: true # Send notification after install/uninstall is finished (true/false)
    system:
      # If no repo information is specified, Flathub will be used by default
      repo-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      repo-name: flathub
      repo-title: "Flathub (system-wide)" # Optional; this sets the remote's user-facing name in graphical frontends like GNOME Software
      install:
        - org.mozilla.firefox
        - org.gnome.Loupe
        - one.ablaze.floorp//lightning # This is an example of flatpak which has multiple branches in selection (flatpak//branch).
      # Flatpak runtimes are not supported (like org.winehq.Wine//stable-23.08),
      # only normal flatpak applications are (like Floorp Lightning web browser in this example).
      # Installing different branches of the same Flatpak is not supported.
      remove:
      # - org.gnome.eog
  
    # Assuming that the above example is configured first in a recipe,
    # a subsequent usage might look like this:
  - type: default-flatpaks
    system:
      # If the repo-* fields are omitted on the subsequent usage,
      # the module will use the previously configured repo.
      # Otherwise, it will overwrite the repo configuration.
      install:
        - org.kde.kdenlive # this Flatpak is appended to the insta llist
        - com.valvesoftware.Steam
        - com.steamgriddb.steam-rom-manager
        - org.gnome.World.PikaBackup
        - com.jetbrains.PyCharm-Community
        - com.visualstudio.code
        - com.mattjakeman.ExtensionManager
        - org.wezfurlong.wezterm
        - md.obsidian.Obsidian
        - net.ankiweb.Anki
        - page.kramo.Cartridges
        - com.usebottles.bottles
        - com.vysp3r.ProtonPlus
        - net.davidotek.pupgui2
        - org.ryujinx.Ryujinx
    user:
      # repo-name will overwrite the previously-configured repo-name for the user remote
      repo-name: flathub-user
      repo-title: "Flathub (User)"

  - type: script
    scripts:
      - nix.sh
      - getbeeper.sh

  - type: fonts
    fonts:
    nerd-fonts:
      - FiraCode # don't add spaces or "Nerd Font" suffix.
      - Hack
      - SourceCodePro
      - Terminus
      - JetBrainsMono
      - NerdFontsSymbolsOnly
    google-fonts:
      - Roboto
      - Open Sans

  - type: bling
    install:
      - ublue-update # https://github.com/ublue-os/ublue-update
      - 1password # install 1Password (stable) and `op` CLI tool
      - dconf-update-service # a service unit that updates the dconf db on boot
        # gnome-vrr # enables gnome-vrr for your image
      - laptop # installs TLP and configures your system for laptop usage
      - flatpaksync # allows synchronization of user-installed flatpaks, see separate documentation section

  - type: chezmoi
    # Installs chezmoi to /usr/bin/chezmoi from latest Github release
    install_chezmoi: true # Optional - Default: true  - Expects type: boolean
    # () Git repository to initialize
    repository: "https://github.com/AsirShahid/dotfiles" # Required - Default: n/a  - Expects type: string
    # Enable the modules services globally for all users
    enable_all_users: true # Optional - Default: true - Expects type: boolean
    # Dotfiles will be updated with this interval
    run_every: '1d' # Optional - Default: '1d' - Expects type: string
    # Dotfile updates will wait this long after a boot before running
    wait_after_boot: '5m' # Optional - Default: '5m' - Expects type: string
    # Disable the service that initializes `repository` on users that are logged in or has linger enabled
    disable_init: false # Optional - Default: false - Expects type: boolean
    # Disable the timer that updates chezmoi with the interval set above
    disable_update: false # Optional - Default: false - Expects type: boolean
    # Policy for handling file that has changed on disk compared to your repo. Accepts "skip" or "replace"
    changed-file-policy: "skip" # Optional - Default: "skip" - Expects type: string

  - type: signing # this sets up the proper policy & signing files for signed images to work fully


